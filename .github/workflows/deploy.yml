name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts

      - name: Deploy and restart Docker container
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} << 'EOF'
            cd /srv/newstream || mkdir /srv/newstream && cd /srv/newstream

            # Remove files
            rm -rf *
          EOF

          cd backend
          scp -r . ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }}:/srv/newstream
          
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} << 'EOF'
            cd /srv/newstream
            
            cat > .env << 'ENVFILE'
            DATABASE_URL="postgresql://newstream:newstream@postgres:5432/newstream"
            JWT_SECRET="${{ secrets.JWT_SECRET }}"
            ELEVENLABS_API_KEY="${{ secrets.ELEVENLABS_API_KEY }}"
            ELEVENLABS_API_URL="${{ secrets.ELEVENLABS_API_URL }}"
            GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}"
            GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}"
            GOOGLE_AI_API_KEY="${{ secrets.GOOGLE_AI_API_KEY }}"
            OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}"
            NEWSDATA_API_KEY="${{ secrets.NEWSDATA_API_KEY }}"
            WORLDNEWS_API_KEY="${{ secrets.WORLDNEWS_API_KEY }}"
            FIRECRAWL_API_URL="${{ secrets.FIRECRAWL_API_URL }}"
            GNEWS_API_KEY="${{ secrets.GNEWS_API_KEY }}"
            AUDIO_STORAGE_DIR="/var/newstream/hls"
            LANGFUSE_PUBLIC_KEY="${{ secrets.LANGFUSE_PUBLIC_KEY }}"
            LANGFUSE_SECRET_KEY="${{ secrets.LANGFUSE_SECRET_KEY }}"
            LANGFUSE_BASE_URL="${{ secrets.LANGFUSE_BASE_URL }}"
            SENTRY_DSN_URL="${{ secrets.SENTRY_DSN_URL }}"
            ENVFILE
            
            sudo docker compose build
            sudo docker compose up -d --force-recreate
          EOF